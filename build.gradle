plugins {
    id 'org.springframework.boot' version '2.0.3.RELEASE' apply false
    id "io.spring.dependency-management" version "1.0.7.RELEASE" apply false
    id "com.bmuschko.docker-remote-api" version "3.6.1" apply false
    id "org.sonarqube" version "2.6.2" apply false
}

group = 'ru.gurv.vg'
version = '0.1.0'

ext {
    bomVersion = '0.1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.bmuschko.docker-remote-api'
    apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
        mavenLocal()
        maven { url "https://oss.sonatype.org/service/local/repositories/snapshots/content/" }
    }

    sourceCompatibility = '1.8'

    bootJar {
        baseName = rootProject.name + '-' + baseName
        excludeDevtools = true
    }

    springBoot {
        buildInfo()
    }

    bootRun {
        systemProperty 'spring.cloud.stream.kafka.binder.brokers', 'localhost:9092'
    }

    dependencyManagement {
        imports {
            mavenBom "io.github.gurv:vg-dependencies:${rootProject.bomVersion}"
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-devtools"
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation 'io.micrometer:micrometer-registry-prometheus'
        implementation "org.codehaus.groovy:groovy-all"

        //TODO https://github.com/gradle/gradle/issues/4979
        implementation ('org.yaml:snakeyaml:1.19') {
            force = true
        }

        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }

    tasks.withType(Test) {
        systemProperties = [
                'spring.cloud.config.enabled': false,
        ]
    }

    task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
        dependsOn build
        dockerFile file("src/main/docker/Dockerfile")
        inputDir = file(".")
        tag = "vg/sample-${project.name}:latest"
        buildArgs = [
                'VG_VERSION': version,
        ]
    }
}